{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "ad02f056",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Value of European call option 8.167.\n"
     ]
    }
   ],
   "source": [
    "# Monte Carlo Valutation of Euro Call Option\n",
    "# in Black-Scholes-Merton model \n",
    "# bsm_mcs_euro.py\n",
    "\n",
    "import math\n",
    "import numpy as np\n",
    "\n",
    "# Parameter Values\n",
    "S0 = 100. #index value\n",
    "K = 105. #strike\n",
    "T = 1.0 #maturity time\n",
    "r = 0.05 #riskless short rate\n",
    "sigma = .2 #volatility\n",
    "\n",
    "I = 10000 #simulation count\n",
    "\n",
    "#Algo\n",
    "z = np.random.standard_normal(I) #pseudo-random numbers\n",
    "#value at T\n",
    "ST = S0 * np.exp((r - 0.5 * sigma ** 2) * T + sigma * math.sqrt(T) * z)\n",
    "hT = np.maximum(ST - K, 0) #payoff at T\n",
    "C0 = math.exp(-r * T) * np.mean(hT) #Monte Carlo Esimator \n",
    "\n",
    "#output\n",
    "print('Value of European call option %5.3f.' % C0)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}

